openapi: 3.1.0
info:
  title: API recycle-waste-management-backend backend service
  version: "1.0"
servers:
  - url: /api/user
  - url: /api/ip
  - url: /api/shops
  - url: /api/settings
paths:
  /users:
    get:
      tags:
        - user
      description: Get user all
      # security:
      #   - bearerAuth: []
      summary: Get user all
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
              message: success
              data:
                - user_id: CEYBZQQ
                  username: tset12
                  email: "12"
  /get_user:
    get:
      tags:
        - user
      security:
        - bearerAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: user_id
          in: query
          schema:
            type: string
          required: true
          description: user_id for find
          value: CWEDS
      summary: Get user by id
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: success
                data:
                  user_id: CEYBZQQ
                  username: tset12
                  email: "12"
  /update_user:
    put:
      tags:
        - user
      description: Update user
      summary: Update user
      parameters:
        - in: query
          name: user_id
          schema:
            type: string
          value: CWEDS
          required: true
          description: user_id for update
      requestBody:
        required: true
        content:
          application/json:
            examples:
              example_1:
                value:
                  username: tset12
                  email: "12"
              example_2:
                value:
                  username: tset13
                  email: "12"

      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: updated successfully

  /delete_user/{user_id}:
    delete:
      tags:
        - user
      description: Delete user
      summary: Delete user
      parameters:
        - in: query
          name: user_id
          schema:
            type: string
          value: CWEDS
          required: true
          description: The sales code name.
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: deleted successfully
  /add_user:
    post:
      tags:
        - user
      description: Add user
      summary: Add user
      requestBody:
        required: true
        description: Add user
        content:
          application/json:
            example:
              username: tset12
              email: "12"
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: "created successfully"

  /update-image-profile:
    post:
      tags:
        - user
      security:
        - bearerAuth: []
      summary: Update user profile image
      description: Upload and update user profile image (converts to WebP and uploads to S3)
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: Image file to upload (JPG, JPEG, PNG, GIF)
      responses:
        "200":
          description: Profile image updated successfully
          content:
            application/json:
              example:
                message: profile image updated successfully
                data:
                  image_url: https://bucketnaja2.s3.ap-southeast-1.amazonaws.com/profile-images/2024/01/01/user123/uuid.webp
        "400":
          description: Bad request - no image file uploaded or invalid format
          content:
            application/json:
              example:
                message: no image file uploaded
        "401":
          description: Unauthorized
          content:
            application/json:
              example:
                message: unauthorized
        "500":
          description: Internal server error
          content:
            application/json:
              example:
                message: failed to process image

  /check_ip:
    get:
      tags:
        - ip
      servers:
        - url: /api/ip
      description: Get ip
      # security:
      #   - bearerAuth: []
      summary: Get ip
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: success
                data: 39.228.50.232

  /shops/get-shops:
    get:
      tags:
        - shops
      description: Get all recycling shops with pagination
      summary: Get all recycling shops
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            default: 12
          description: Number of items per page
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: success
                data:
                  - shop_id: shop-abc123
                    user_id: user-xyz789
                    name: Eco Recycle Center
                    description: A shop that buys recyclable materials
                    address: 123 Green Street, Bangkok
                    phone: "0812345678"
                    email: contact@ecorecycle.com
                    image_url: https://example.com/shop-image.jpg
                    opening_time: "08:00"
                    closing_time: "18:00"
                    latitude: 13.7563
                    longitude: 100.5018
                    created_at: "2024-01-01T00:00:00Z"
                    updated_at: "2024-01-01T00:00:00Z"
                page: 1
                limit: 12
                total_pages: 1
                total_items: 1
                status: 200

  /shops/get-shop/{shop_id}:
    get:
      tags:
        - shops
      description: Get a specific recycling shop by shop ID
      summary: Get recycling shop by ID
      parameters:
        - in: path
          name: shop_id
          required: true
          schema:
            type: string
          description: Shop ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: success
                data:
                  shop_id: shop-abc123
                  user_id: user-xyz789
                  name: Eco Recycle Center
                  description: A shop that buys recyclable materials
                  address: 123 Green Street, Bangkok
                  phone: "0812345678"
                  email: contact@ecorecycle.com
                  image_url: https://example.com/shop-image.jpg
                  opening_time: "08:00"
                  closing_time: "18:00"
                  latitude: 13.7563
                  longitude: 100.5018
                  created_at: "2024-01-01T00:00:00Z"
                  updated_at: "2024-01-01T00:00:00Z"

  /shops/my-shop:
    get:
      tags:
        - shops
      security:
        - bearerAuth: []
      description: Get the current user's recycling shop
      summary: Get current user's shop
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: success
                data:
                  shop_id: shop-abc123
                  user_id: user-xyz789
                  name: Eco Recycle Center
                  description: A shop that buys recyclable materials
                  address: 123 Green Street, Bangkok
                  phone: "0812345678"
                  email: contact@ecorecycle.com
                  image_url: https://example.com/shop-image.jpg
                  opening_time: "08:00"
                  closing_time: "18:00"
                  latitude: 13.7563
                  longitude: 100.5018
                  created_at: "2024-01-01T00:00:00Z"
                  updated_at: "2024-01-01T00:00:00Z"

  /shops/create-shop:
    post:
      tags:
        - shops
      security:
        - bearerAuth: []
      description: Create a new recycling shop for the current user
      summary: Create recycling shop
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - address
              properties:
                name:
                  type: string
                  description: Shop name
                  example: Eco Recycle Center
                description:
                  type: string
                  description: Shop description
                  example: A shop that buys recyclable materials
                address:
                  type: string
                  description: Shop address
                  example: 123 Green Street, Bangkok
                phone:
                  type: string
                  description: Shop phone number
                  example: "0812345678"
                email:
                  type: string
                  description: Shop email
                  example: contact@ecorecycle.com
                  format: email
                opening_time:
                  type: string
                  description: Opening time (HH:MM format)
                  example: "08:00"
                closing_time:
                  type: string
                  description: Closing time (HH:MM format)
                  example: "18:00"
                latitude:
                  type: number
                  format: float
                  description: Shop latitude
                  example: 13.7563
                longitude:
                  type: number
                  format: float
                  description: Shop longitude
                  example: 100.5018
                image:
                  type: string
                  format: binary
                  description: Shop image file
      responses:
        "200":
          description: Shop created successfully
          content:
            application/json:
              example:
                message: Shop created successfully
        "400":
          description: Bad request
          content:
            application/json:
              example:
                message: name and address are required
        "401":
          description: Unauthorized
          content:
            application/json:
              example:
                message: Unauthorized access
        "409":
          description: Conflict - user already has a shop
          content:
            application/json:
              example:
                message: user already has a shop

  /shops/update-shop/{shop_id}:
    put:
      tags:
        - shops
      security:
        - bearerAuth: []
      description: Update an existing recycling shop
      summary: Update recycling shop
      parameters:
        - in: path
          name: shop_id
          required: true
          schema:
            type: string
          description: Shop ID to update
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Shop name
                  example: Updated Eco Recycle Center
                description:
                  type: string
                  description: Shop description
                  example: An updated description
                address:
                  type: string
                  description: Shop address
                  example: 456 Updated Street, Bangkok
                phone:
                  type: string
                  description: Shop phone number
                  example: "0812345678"
                email:
                  type: string
                  description: Shop email
                  example: updated@ecorecycle.com
                  format: email
                opening_time:
                  type: string
                  description: Opening time (HH:MM format)
                  example: "08:00"
                closing_time:
                  type: string
                  description: Closing time (HH:MM format)
                  example: "18:00"
                latitude:
                  type: number
                  format: float
                  description: Shop latitude
                  example: 13.7563
                longitude:
                  type: number
                  format: float
                  description: Shop longitude
                  example: 100.5018
                image:
                  type: string
                  format: binary
                  description: Shop image file
      responses:
        "200":
          description: Shop updated successfully
          content:
            application/json:
              example:
                message: Shop updated successfully
        "400":
          description: Bad request
          content:
            application/json:
              example:
                message: Shop ID is required
        "401":
          description: Unauthorized
          content:
            application/json:
              example:
                message: Unauthorized access
        "403":
          description: Forbidden - user doesn't own this shop
          content:
            application/json:
              example:
                message: Access denied: You don't own this shop
        "404":
          description: Shop not found
          content:
            application/json:
              example:
                message: Shop not found

  /shops/delete-shop/{shop_id}:
    delete:
      tags:
        - shops
      security:
        - bearerAuth: []
      description: Delete a recycling shop
      summary: Delete recycling shop
      parameters:
        - in: path
          name: shop_id
          required: true
          schema:
            type: string
          description: Shop ID to delete
      responses:
        "200":
          description: Shop deleted successfully
          content:
            application/json:
              example:
                message: Shop deleted successfully
        "400":
          description: Bad request
          content:
            application/json:
              example:
                message: Shop ID is required
        "401":
          description: Unauthorized
          content:
            application/json:
              example:
                message: Unauthorized access
        "403":
          description: Forbidden - user doesn't own this shop
          content:
            application/json:
              example:
                message: Access denied: You don't own this shop
        "404":
          description: Shop not found
          content:
            application/json:
              example:
                message: Shop not found

  /settings:
    get:
      tags:
        - settings
      security:
        - bearerAuth: []
      description: Get current user's settings
      summary: Get user settings
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      user_id:
                        type: string
                        example: ABC123
                      email_notifications:
                        type: boolean
                        example: true
                      push_notifications:
                        type: boolean
                        example: false
                      marketplace_updates:
                        type: boolean
                        example: true
                      shop_updates:
                        type: boolean
                        example: true
                      profile_visibility:
                        type: string
                        example: public
                      show_email:
                        type: boolean
                        example: false
                      show_phone:
                        type: boolean
                        example: false
                      theme:
                        type: string
                        example: light
                      language:
                        type: string
                        example: th
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
        "401":
          description: Unauthorized
          content:
            application/json:
              example:
                message: unauthorized
        "500":
          description: Internal Server Error
          content:
            application/json:
              example:
                message: cannot get settings

    put:
      tags:
        - settings
      security:
        - bearerAuth: []
      description: Update current user's settings
      summary: Update user settings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_notifications:
                  type: boolean
                  example: true
                push_notifications:
                  type: boolean
                  example: false
                marketplace_updates:
                  type: boolean
                  example: true
                shop_updates:
                  type: boolean
                  example: true
                profile_visibility:
                  type: string
                  enum: [public, private, friends]
                  example: public
                show_email:
                  type: boolean
                  example: false
                show_phone:
                  type: boolean
                  example: false
                theme:
                  type: string
                  enum: [light, dark, auto]
                  example: light
                language:
                  type: string
                  enum: [th, en]
                  example: th
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: settings updated successfully
                  data:
                    type: object
                    properties:
                      user_id:
                        type: string
                      email_notifications:
                        type: boolean
                      push_notifications:
                        type: boolean
                      marketplace_updates:
                        type: boolean
                      shop_updates:
                        type: boolean
                      profile_visibility:
                        type: string
                      show_email:
                        type: boolean
                      show_phone:
                        type: boolean
                      theme:
                        type: string
                      language:
                        type: string
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
        "400":
          description: Bad Request
          content:
            application/json:
              example:
                message: invalid json body
        "401":
          description: Unauthorized
          content:
            application/json:
              example:
                message: unauthorized
        "500":
          description: Internal Server Error
          content:
            application/json:
              example:
                message: invalid theme: dark_mode

    delete:
      tags:
        - settings
      security:
        - bearerAuth: []
      description: Delete current user's settings (resets to default)
      summary: Delete user settings
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: settings deleted successfully
        "401":
          description: Unauthorized
          content:
            application/json:
              example:
                message: unauthorized
        "500":
          description: Internal Server Error
          content:
            application/json:
              example:
                message: cannot delete settings

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Authorization header using the Bearer scheme.
      in: header
      name: Authorization

tags:
  - name: user
    description: User All endpoint
  - name: ip
  - name: shops
    description: Recycling shops management endpoints
  - name: settings
    description: User settings management endpoints
